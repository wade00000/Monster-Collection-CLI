"""added type and typeeffectiveness tables

Revision ID: a95fded4bdcc
Revises: 0370c160cc50
Create Date: 2025-06-13 17:10:54.614161

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a95fded4bdcc'
down_revision: Union[str, None] = '0370c160cc50'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_effectiveness',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attacking_type_id', sa.Integer(), nullable=True),
    sa.Column('defending_type_id', sa.Integer(), nullable=True),
    sa.Column('multiplier', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attacking_type_id'], ['types.id'], ),
    sa.ForeignKeyConstraint(['defending_type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('monster_species', sa.Column('type_id', sa.Integer(), nullable=True))
    with op.batch_alter_table("monster_species", schema=None) as batch_op:
        batch_op.create_foreign_key('create_foreign_key', "types", ["type_id"], ["id"])
    op.drop_column('monster_species', 'type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('monster_species', sa.Column('type', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'monster_species', type_='foreignkey')
    op.drop_column('monster_species', 'type_id')
    op.drop_table('type_effectiveness')
    op.drop_table('types')
    # ### end Alembic commands ###
